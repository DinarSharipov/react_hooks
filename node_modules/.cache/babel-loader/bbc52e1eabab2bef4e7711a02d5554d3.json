{"ast":null,"code":"var _jsxFileName = \"/Users/dinar/Desktop/VEB_Development/React/\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430 \\u043F\\u043E \\u041C\\u0438\\u043D\\u0438\\u043D\\u0443/react-hooks/src/context/github/GithubState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING } from \"../types\";\nimport { GithubContext } from \"./githubContext\";\nimport { githubReducer } from \"./githubReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconsole.log(precess.env.REACT_APP_CLIENT_SECRET);\n\nconst GithubState = ({\n  children\n}) => {\n  _s();\n\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: []\n  };\n  const [state, dispatch] = useReducer(githubReducer, initialState);\n\n  const search = async value => {\n    setLoading();\n    dispatch({\n      type: SEARCH_USERS,\n      payload: []\n    });\n  };\n\n  const getUser = async name => {\n    setLoading();\n    dispatch({\n      type: GET_USER,\n      payload: {}\n    });\n  };\n\n  const getRepos = async name => {\n    setLoading();\n    dispatch({\n      type: GET_REPOS,\n      payload: []\n    });\n  };\n\n  const clearUsers = () => {\n    dispatch({\n      type: CLEAR_USERS\n    });\n  };\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  const {\n    user,\n    users,\n    repos,\n    loading\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n      value: {\n        setLoading,\n        search,\n        getUser,\n        getRepos,\n        clearUsers,\n        user,\n        users,\n        repos,\n        loading\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GithubState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GithubState;\nexport default GithubState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubState\");","map":{"version":3,"sources":["/Users/dinar/Desktop/VEB_Development/React/Практика по Минину/react-hooks/src/context/github/GithubState.js"],"names":["React","useReducer","CLEAR_USERS","GET_REPOS","GET_USER","SEARCH_USERS","SET_LOADING","GithubContext","githubReducer","console","log","precess","env","REACT_APP_CLIENT_SECRET","GithubState","children","initialState","user","users","loading","repos","state","dispatch","search","value","setLoading","type","payload","getUser","name","getRepos","clearUsers"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,QAHF,EAIEC,YAJF,EAKEC,WALF,QAMO,UANP;AAOA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,aAAT,QAA8B,iBAA9B;;AAEAC,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,uBAAxB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACpC,QAAMC,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAE,EADa;AAEnBC,IAAAA,KAAK,EAAE,EAFY;AAGnBC,IAAAA,OAAO,EAAE,KAHU;AAInBC,IAAAA,KAAK,EAAE;AAJY,GAArB;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,UAAU,CAACO,aAAD,EAAgBQ,YAAhB,CAApC;;AAEA,QAAMO,MAAM,GAAG,MAAOC,KAAP,IAAiB;AAC9BC,IAAAA,UAAU;AACVH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAErB,YADC;AAEPsB,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAND;;AAQA,QAAMC,OAAO,GAAG,MAAOC,IAAP,IAAgB;AAC9BJ,IAAAA,UAAU;AACVH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEtB,QADC;AAEPuB,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAND;;AAQA,QAAMG,QAAQ,GAAG,MAAOD,IAAP,IAAgB;AAC/BJ,IAAAA,UAAU;AACVH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEvB,SADC;AAEPwB,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAND;;AAQA,QAAMI,UAAU,GAAG,MAAM;AACvBT,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAExB;AADC,KAAD,CAAR;AAGD,GAJD;;AAMA,QAAMuB,UAAU,GAAG,MACjBH,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAEpB;AADC,GAAD,CADV;;AAKA,QAAM;AAAEW,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeE,IAAAA,KAAf;AAAsBD,IAAAA;AAAtB,MAAkCE,KAAxC;AAEA,sBACE;AAAA,2BACE,QAAC,aAAD,CAAe,QAAf;AACE,MAAA,KAAK,EAAE;AACLI,QAAAA,UADK;AAELF,QAAAA,MAFK;AAGLK,QAAAA,OAHK;AAILE,QAAAA,QAJK;AAKLC,QAAAA,UALK;AAMLd,QAAAA,IANK;AAOLC,QAAAA,KAPK;AAQLE,QAAAA,KARK;AASLD,QAAAA;AATK,OADT;AAAA,gBAaGJ;AAbH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAjED;;GAAMD,W;;KAAAA,W;AAmEN,eAAeA,WAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport {\n  CLEAR_USERS,\n  GET_REPOS,\n  GET_USER,\n  SEARCH_USERS,\n  SET_LOADING,\n} from \"../types\";\nimport { GithubContext } from \"./githubContext\";\nimport { githubReducer } from \"./githubReducer\";\n\nconsole.log(precess.env.REACT_APP_CLIENT_SECRET);\n\nconst GithubState = ({ children }) => {\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: [],\n  };\n  const [state, dispatch] = useReducer(githubReducer, initialState);\n\n  const search = async (value) => {\n    setLoading();\n    dispatch({\n      type: SEARCH_USERS,\n      payload: [],\n    });\n  };\n\n  const getUser = async (name) => {\n    setLoading();\n    dispatch({\n      type: GET_USER,\n      payload: {},\n    });\n  };\n\n  const getRepos = async (name) => {\n    setLoading();\n    dispatch({\n      type: GET_REPOS,\n      payload: [],\n    });\n  };\n\n  const clearUsers = () => {\n    dispatch({\n      type: CLEAR_USERS,\n    });\n  };\n\n  const setLoading = () =>\n    dispatch({\n      type: SET_LOADING,\n    });\n\n  const { user, users, repos, loading } = state;\n\n  return (\n    <div>\n      <GithubContext.Provider\n        value={{\n          setLoading,\n          search,\n          getUser,\n          getRepos,\n          clearUsers,\n          user,\n          users,\n          repos,\n          loading,\n        }}\n      >\n        {children}\n      </GithubContext.Provider>\n    </div>\n  );\n};\n\nexport default GithubState;\n"]},"metadata":{},"sourceType":"module"}