{"ast":null,"code":"var _jsxFileName = \"/Users/dinar/Desktop/VEB_Development/React/\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430 \\u043F\\u043E \\u041C\\u0438\\u043D\\u0438\\u043D\\u0443/react-hooks/src/context/github/GithubState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport { CLEAR_USERS, GET_REPOS, GET_USER, SEARCH_USERS, SET_LOADING } from \"../types\";\nimport { GithubContext } from \"./githubContext\";\nimport { githubReducer } from \"./githubReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GithubState = ({\n  children\n}) => {\n  _s();\n\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: []\n  };\n  const [state, dispatch] = useReducer(githubReducer, initialState);\n\n  const search = async value => {\n    dispatch({\n      type: SEARCH_USERS,\n      payload: []\n    });\n  };\n\n  const getUser = async name => {\n    dispatch({\n      type: GET_USER,\n      payload: {}\n    });\n  };\n\n  const getRepos = async name => {\n    dispatch({\n      type: GET_REPOS,\n      payload: []\n    });\n  };\n\n  const clearUsers = () => {\n    dispatch({\n      type: CLEAR_USERS\n    });\n  };\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n      value: {},\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GithubState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GithubState;\nexport default GithubState;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubState\");","map":{"version":3,"sources":["/Users/dinar/Desktop/VEB_Development/React/Практика по Минину/react-hooks/src/context/github/GithubState.js"],"names":["React","useReducer","CLEAR_USERS","GET_REPOS","GET_USER","SEARCH_USERS","SET_LOADING","GithubContext","githubReducer","GithubState","children","initialState","user","users","loading","repos","state","dispatch","search","value","type","payload","getUser","name","getRepos","clearUsers","setLoading"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,QAHF,EAIEC,YAJF,EAKEC,WALF,QAMO,UANP;AAOA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,aAAT,QAA8B,iBAA9B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACpC,QAAMC,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAE,EADa;AAEnBC,IAAAA,KAAK,EAAE,EAFY;AAGnBC,IAAAA,OAAO,EAAE,KAHU;AAInBC,IAAAA,KAAK,EAAE;AAJY,GAArB;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACO,aAAD,EAAgBG,YAAhB,CAApC;;AAEA,QAAMO,MAAM,GAAG,MAAOC,KAAP,IAAiB;AAC9BF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEf,YADC;AAEPgB,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMC,OAAO,GAAG,MAAOC,IAAP,IAAgB;AAC9BN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEhB,QADC;AAEPiB,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMG,QAAQ,GAAG,MAAOD,IAAP,IAAgB;AAC/BN,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEjB,SADC;AAEPkB,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMI,UAAU,GAAG,MAAM;AACvBR,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAElB;AADC,KAAD,CAAR;AAGD,GAJD;;AAMA,QAAMwB,UAAU,GAAG,MACjBT,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAEd;AADC,GAAD,CADV;;AAKA,sBACE;AAAA,2BACE,QAAC,aAAD,CAAe,QAAf;AAAwB,MAAA,KAAK,EAAE,EAA/B;AAAA,gBAAoCI;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA9CD;;GAAMD,W;;KAAAA,W;AAgDN,eAAeA,WAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport {\n  CLEAR_USERS,\n  GET_REPOS,\n  GET_USER,\n  SEARCH_USERS,\n  SET_LOADING,\n} from \"../types\";\nimport { GithubContext } from \"./githubContext\";\nimport { githubReducer } from \"./githubReducer\";\n\nconst GithubState = ({ children }) => {\n  const initialState = {\n    user: {},\n    users: [],\n    loading: false,\n    repos: [],\n  };\n  const [state, dispatch] = useReducer(githubReducer, initialState);\n\n  const search = async (value) => {\n    dispatch({\n      type: SEARCH_USERS,\n      payload: [],\n    });\n  };\n\n  const getUser = async (name) => {\n    dispatch({\n      type: GET_USER,\n      payload: {},\n    });\n  };\n\n  const getRepos = async (name) => {\n    dispatch({\n      type: GET_REPOS,\n      payload: [],\n    });\n  };\n\n  const clearUsers = () => {\n    dispatch({\n      type: CLEAR_USERS,\n    });\n  };\n\n  const setLoading = () =>\n    dispatch({\n      type: SET_LOADING,\n    });\n\n  return (\n    <div>\n      <GithubContext.Provider value={{}}>{children}</GithubContext.Provider>\n    </div>\n  );\n};\n\nexport default GithubState;\n"]},"metadata":{},"sourceType":"module"}